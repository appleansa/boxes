@charset "UTF-8";
@import url("https://fonts.googleapis.com/css2?family=Open+Sans:wght@400;600;700&display=swap");
html, body, div, span, applet, object, iframe,
h1, h2, h3, h4, h5, h6, p, blockquote, pre,
a, abbr, acronym, address, big, cite, code,
del, dfn, em, img, ins, kbd, q, s, samp,
small, strike, strong, sub, sup, tt, var,
b, u, i, center,
dl, dt, dd, ol, ul, li,
fieldset, form, label, legend,
table, caption, tbody, tfoot, thead, tr, th, td,
article, aside, canvas, details, embed,
figure, figcaption, footer, header, hgroup,
menu, nav, output, ruby, section, summary,
time, mark, audio, video {
  margin: 0;
  padding: 0;
  border: 0;
  font-size: 100%;
  font: inherit;
  vertical-align: baseline; }

/* HTML5 display-role reset for older browsers */
article, aside, details, figcaption, figure,
footer, header, hgroup, menu, nav, section {
  display: block; }

body {
  line-height: 1; }

ol, ul {
  list-style: none; }

blockquote, q {
  quotes: none; }

blockquote:before, blockquote:after,
q:before, q:after {
  content: '';
  content: none; }

table {
  border-collapse: collapse;
  border-spacing: 0; }

* {
  outline: none;
  box-sizing: border-box;
  -webkit-box-sizing: border-box;
  -webkit-font-smoothing: subpixel-antialiased;
  -webkit-backface-visibility: hidden; }

html {
  -webkit-text-size-adjust: none; }

html,
body {
  height: 100%;
  font-family: 'Open Sans', sans-serif; }

body {
  -webkit-text-size-adjust: 100%;
  background: #fdfdfd; }

input {
  -webkit-appearance: none;
  border-radius: 0px; }

input[type=text],
input[type=button] {
  -webkit-appearance: none;
  -webkit-border-radius: 0; }

:active,
:hover,
:focus {
  outline: 0;
  outline-offset: 0; }

a[href^="tel"] {
  color: inherit;
  text-decoration: none; }

input[type="submit"],
button {
  cursor: pointer; }

html,
body {
  height: 100%;
  width: 100%; }

body {
  -webkit-font-smoothing: subpixel-antialiased !important;
  -webkit-backface-visibility: hidden;
  -moz-backface-visibility: hidden;
  -ms-backface-visibility: hidden; }

.ta-center {
  text-align: center; }

.ta-right {
  text-align: right; }

.ta-left {
  text-align: left; }

.fl-left {
  float: left; }

.fl-right {
  float: right; }

.dib {
  display: inline-block; }

.va-middle {
  vertical-align: middle; }

.clear {
  position: relative; }
  .clear:before {
    content: '';
    width: 100%;
    height: 0;
    clear: both;
    display: block; }

b,
strong {
  font-weight: 600; }

p {
  font-size: 14px;
  line-height: 25px;
  font-weight: 400; }

.header {
  position: absolute;
  top: 0;
  left: 0;
  z-index: 100;
  width: 100%;
  margin-top: 38px; }
  .header-inner {
    max-width: 1140px;
    margin: 0 auto; }
  .header .navi-social {
    display: none; }
  .header .logo {
    float: left; }
  .header-navi .navi {
    margin: 0 230px 0 150px; }
    .header-navi .navi li {
      display: inline-block;
      vertical-align: top;
      margin: 21px 0; }
      .header-navi .navi li:not(:last-child) {
        margin-right: 32px; }
      .header-navi .navi li.active a {
        color: #fff;
        font-weight: 700; }
    .header-navi .navi a {
      font-size: 18px;
      line-height: 25px;
      color: #8B8C9F;
      text-decoration: none; }
      .header-navi .navi a:hover {
        color: #7679A7; }
  .header-navi .phones {
    float: right;
    position: relative;
    padding-left: 75px;
    margin-top: 9px; }
    .header-navi .phones:before {
      content: '';
      width: 60px;
      height: 14px;
      display: block;
      position: absolute;
      left: 0;
      top: 50%;
      margin-top: -7px;
      background: url(../img/icons/icon-arrow-left.svg) top right no-repeat; }
    .header-navi .phones a {
      font-size: 18px;
      line-height: 25px;
      text-align: right;
      color: #8B8C9F; }

.ms {
  position: relative;
  height: 100vh;
  width: 100%;
  background: url(../img/main_bg.jpg) top center no-repeat;
  display: flex;
  align-items: center; }
  .ms-container {
    max-width: 1140px;
    width: 100%;
    margin: 0 auto; }
  .ms-content {
    position: relative; }
    .ms-content:after {
      content: '';
      width: 1px;
      display: block;
      background: #ACABAB;
      height: 180px;
      position: absolute;
      left: 16%;
      top: 100%;
      margin-top: 40px; }
  .ms .title {
    font-size: 60px;
    line-height: 78px;
    color: #494948; }
  .ms .undertitle {
    font-size: 40px;
    line-height: 52px;
    color: #71706F; }

.c1140 {
  max-width: 1140px;
  width: 100%;
  margin: 0 auto; }

.solutions {
  padding: 170px 0 30px; }
  .solutions .title {
    font-size: 40px;
    line-height: 52px;
    letter-spacing: 0.01em;
    color: #494948;
    margin-bottom: 20px; }
  .solutions .content {
    position: relative;
    padding-left: 55%; }
    .solutions .content p {
      font-size: 20px;
      line-height: 30px;
      margin-bottom: 10px;
      color: #494948; }
  .solutions .img {
    position: absolute;
    left: 0;
    top: 0;
    width: 45%; }
    .solutions .img img {
      display: block;
      width: 100%;
      height: auto; }
  .solutions .order-info {
    margin-bottom: 20px; }

.btn {
  height: 62px;
  line-height: 60px;
  width: 260px;
  font-family: 'Open Sans', sans-serif;
  background: #F4A477;
  color: #fff;
  font-size: 18px;
  font-weight: 600;
  text-align: center;
  text-decoration: none;
  display: inline-block;
  transition: all 0.3s ease; }
  .btn:hover {
    background: #ec8f5a; }

section.props, section.boxes {
  padding: 130px 0; }

section.feedback {
  padding: 130px 0 160px; }

.props-container {
  position: relative; }
  .props-container .controls {
    float: left;
    width: 40%;
    counter-reset: list; }
  .props-container .control {
    margin-bottom: 35px;
    position: relative;
    padding-left: 97px;
    cursor: pointer; }
    .props-container .control span {
      text-shadow: 0px 0px 1px black;
      font-weight: 600;
      font-size: 40px;
      line-height: 54px;
      color: #fff; }
    .props-container .control:hover span, .props-container .control.active span {
      color: #8B8C9F;
      text-shadow: none; }
    .props-container .control:hover:before, .props-container .control.active:before {
      content: '';
      width: 35px;
      height: 1px;
      background: #F4A477;
      position: absolute;
      left: 0;
      top: 28px;
      font-weight: 600; }
    .props-container .control:after {
      counter-increment: list;
      /* Увеличиваем значение счетчика */
      content: "0" counter(list);
      font-size: 20px;
      line-height: 27px;
      color: #A39E9E;
      position: absolute;
      left: 45px;
      top: 15px; }
    .props-container .control:hover:after, .props-container .control.active:after {
      color: #F4A477; }
  .props-container .content {
    margin-left: 45%; }
    .props-container .content img {
      display: block;
      width: 100%;
      height: auto;
      margin-bottom: 30px; }
    .props-container .content p {
      max-width: 550px;
      color: #494948;
      font-size: 20px;
      line-height: 30px; }

.boxes .title {
  font-size: 40px;
  line-height: 52px;
  margin-bottom: 60px;
  font-weight: 600;
  color: #494948; }

.feedback-container {
  box-shadow: -4px -2px 20px rgba(183, 183, 183, 0.2), 4px 2px 20px rgba(183, 183, 183, 0.2);
  background: #FEFDFD;
  position: relative; }
  .feedback-container:before {
    content: '';
    left: 50%;
    display: block;
    width: 50%;
    height: 100%;
    position: absolute;
    top: 0;
    bottom: 0;
    background: url(../img/contact_img.png) 0 0 no-repeat;
    background-size: cover; }

.feedback-form {
  background: #FEFDFD;
  width: 50%;
  padding: 50px 115px 50px 80px; }

.feedback .title {
  font-size: 30px;
  line-height: 41px;
  color: #8B8C9F;
  margin-bottom: 35px;
  text-align: center; }

.fly-labels-form .field {
  position: relative;
  width: 100%; }
  .fly-labels-form .field:not(:last-child) {
    margin-bottom: 40px; }
  .fly-labels-form .field input {
    width: 100%;
    font-size: 16px;
    height: 44px;
    line-height: 22px;
    color: #5E5F75;
    border: 0px;
    background: transparent;
    font-family: 'Open Sans', sans-serif;
    border-bottom: 1px solid #8F8F8F;
    transition: all 0.3s ease; }
  .fly-labels-form .field textarea {
    width: 100%;
    height: 120px;
    line-height: 22px;
    font-size: 14px;
    padding: 15px;
    background: transparent;
    font-family: 'Open Sans', sans-serif;
    border: 1px solid #e8e8e8;
    transition: all 0.3s ease; }
  .fly-labels-form .field label {
    position: absolute;
    z-index: 10;
    left: 0;
    top: 18px;
    font-size: 16px;
    font-family: 'Open Sans', sans-serif;
    color: #A4A8AA;
    padding: 0;
    transition: all 0.3s ease; }
  .fly-labels-form .field.focus label {
    font-size: 14px;
    top: -10px;
    color: #F4A477; }
  .fly-labels-form .field .btn {
    outline: none;
    border: none;
    width: 100%;
    position: relative; }
    .fly-labels-form .field .btn:after {
      content: '';
      width: 40px;
      height: 14px;
      font-family: 'Open Sans', sans-serif;
      margin-left: 10px;
      display: inline-block;
      vertical-align: middle;
      background-color: #fff;
      -webkit-mask: url(../img/icons/icon-arrow-left.svg) 0 0 no-repeat;
              mask: url(../img/icons/icon-arrow-left.svg) 0 0 no-repeat;
      -webkit-mask-size: 100%;
              mask-size: 100%; }
  .fly-labels-form .field-row {
    display: flex;
    justify-content: space-between; }
    .fly-labels-form .field-row .field {
      width: 45%; }

.fly-labels-form .invalid:before {
  content: '';
  width: 16px;
  height: 16px;
  display: block;
  position: absolute;
  right: 9px;
  top: 14px;
  background: url(../img/icons/icon-error.svg) 50% 50% no-repeat; }

.fly-labels-form .invalid .input {
  border-bottom: 1px solid #EA2828; }

.fly-labels-form .invalid .error {
  font-size: 12px;
  line-height: 16px;
  color: #EA2828; }

.fly-labels-form .empty:before {
  content: '';
  width: 18px;
  height: 18px;
  display: block;
  position: absolute;
  right: 9px;
  top: 14px;
  background: url(../img/icons/icon-warning.svg) 50% 50% no-repeat; }

.fly-labels-form .empty .input {
  border-bottom: 1px solid #E3BE38; }

.fly-labels-form .empty .error {
  font-size: 12px;
  line-height: 16px;
  color: #E3BE38; }

.swiper-slider {
  position: relative; }

.swiper-wrapper {
  margin-bottom: 55px; }

.swiper-navi {
  position: absolute;
  left: 0;
  right: 0;
  top: 50%;
  margin-top: -22px; }

.swiper-slide .slide {
  position: relative;
  overflow: hidden; }
  .swiper-slide .slide:before {
    content: '';
    width: 100%;
    height: 100%;
    position: absolute;
    display: block;
    background: #FFFFFF;
    opacity: 0.4;
    transition: all 0.3s ease;
    cursor: pointer; }

.swiper-slide img {
  display: block;
  width: 100%;
  height: auto; }

.swiper-slide-active .slide:before {
  opacity: 0; }

.swiper-button-prev {
  left: -50px;
  color: #8B8C9F; }

.swiper-button-next {
  right: -50px;
  color: #8B8C9F; }

.swiper-button-disabled {
  color: #C4C4C4; }

.swiper-pagination {
  position: relative;
  display: none;
  margin-top: 55px; }
  .swiper-pagination-bullet {
    width: 20px;
    height: 20px;
    border: 1px solid #F4A477;
    background-color: #fff;
    opacity: 1;
    margin: 0 16px; }
  .swiper-pagination-bullet-active {
    background: #F4A477; }

.swiper-content {
  max-width: 750px; }
  .swiper-content p {
    font-size: 20px;
    line-height: 30px;
    color: #494948; }

.autocomplete-items {
  margin-top: 10px;
  background: #FEFDFD;
  box-shadow: 0px 4px 10px rgba(183, 183, 183, 0.25); }
  .autocomplete-items div {
    cursor: pointer;
    font-weight: 500;
    font-size: 14px;
    line-height: 19px;
    color: #95959F;
    padding: 6px 23px;
    border-left: 4px solid #fff; }
    .autocomplete-items div:hover {
      color: #5E5F75;
      border-left: 4px solid #F4A477; }

.autocomplete.focus .input {
  border-bottom: 1px solid #f4a477; }

.autocomplete.active {
  position: relative; }
  .autocomplete.active:after {
    content: '';
    width: 12px;
    height: 12px;
    display: block;
    position: absolute;
    right: 9px;
    top: 17px;
    background-color: gray;
    -webkit-mask: url(../img/icons/icon-error.svg) 50% 50% no-repeat;
            mask: url(../img/icons/icon-error.svg) 50% 50% no-repeat; }

.autocomplete.confirmed {
  position: relative; }
  .autocomplete.confirmed:after {
    content: '';
    width: 16px;
    height: 7px;
    display: block;
    position: absolute;
    right: 9px;
    top: 20px;
    border-left: 2px solid #f4a477;
    border-bottom: 2px solid #f4a477;
    transform: rotate(-45deg); }
  .autocomplete.confirmed input {
    border-bottom: 1px solid #f4a477; }

.autocomplete.preload {
  position: relative; }
  .autocomplete.preload:before {
    content: '';
    width: 12px;
    height: 12px;
    display: block;
    position: absolute;
    top: 17px;
    right: 35px;
    background: url(../img/icons/icon-preloading.svg) 50% 50% no-repeat;
    animation: preload 2s ease infinite;
    -webkit-animation: preload 2s ease infinite;
    -moz-animation: preload 2s ease infinite; }

@keyframes preload {
  0% {
    transform: rotate(0); }
  100% {
    transform: rotate(360deg); } }

@-webkit-keyframes preload {
  0% {
    transform: rotate(0); }
  100% {
    transform: rotate(360deg); } }

.selectbox {
  width: 100%;
  font-size: 16px;
  height: 44px;
  line-height: 22px;
  color: #5E5F75;
  border: 0px;
  background: transparent;
  font-family: 'Open Sans', sans-serif;
  border-bottom: 1px solid #8F8F8F;
  transition: all 0.3s ease;
  position: relative;
  cursor: pointer; }
  .selectbox select {
    visibility: hidden;
    display: none; }
  .selectbox .select {
    height: 44px;
    line-height: 44px;
    position: relative; }
    .selectbox .select:after {
      content: '';
      width: 8px;
      height: 8px;
      display: block;
      position: absolute;
      right: 9px;
      top: 17px;
      border-top: 1px solid #8F8F8F;
      border-right: 1px solid #8F8F8F;
      transform: rotate(135deg); }
  .selectbox .options {
    margin-top: 10px;
    background: #FEFDFD;
    box-shadow: 0px 4px 10px rgba(183, 183, 183, 0.25);
    position: relative;
    z-index: 20;
    display: none; }
    .selectbox .options li {
      cursor: pointer;
      font-weight: 500;
      font-size: 14px;
      line-height: 19px;
      color: #95959F;
      padding: 6px 23px;
      border-left: 4px solid #fff; }
      .selectbox .options li:hover {
        color: #5E5F75;
        border-left: 4px solid #F4A477; }

.disabled .selectbox {
  border-bottom: 1px solid #DBDBDB; }

.disabled .select:after {
  border-color: #DBDBDB; }

.disabled .select span {
  color: #DBDBDB; }

.icon {
  position: relative; }
  .icon:before {
    content: '';
    display: inline-block;
    width: 30px;
    height: 30px;
    background-color: #F4A477; }
  .icon:hover:before {
    background-color: #ec8f5a; }
  .icon.icon-facebook:before {
    -webkit-mask: url(../img/icons/icon-facebook.svg) 50% 50% no-repeat;
            mask: url(../img/icons/icon-facebook.svg) 50% 50% no-repeat; }
  .icon.icon-instagram:before {
    -webkit-mask: url(../img/icons/icon-instagram.svg) 50% 50% no-repeat;
            mask: url(../img/icons/icon-instagram.svg) 50% 50% no-repeat; }
  .icon.icon-youtube:before {
    -webkit-mask: url(../img/icons/icon-youtube.svg) 50% 50% no-repeat;
            mask: url(../img/icons/icon-youtube.svg) 50% 50% no-repeat; }

.footer {
  padding: 55px 0 20px;
  background: #F7F7F7; }
  .footer-logo-container {
    float: left; }
    .footer-logo-container .logo {
      margin-bottom: 18px; }
  .footer .phones {
    float: right;
    margin-top: 5px; }
    .footer .phones a {
      font-weight: 600;
      font-size: 18px;
      line-height: 25px;
      color: #8B8C9F; }
    .footer .phones .phone-info {
      font-size: 14px;
      line-height: 19px;
      color: #F4A477;
      margin-top: 10px; }
  .footer .copy {
    font-size: 16px;
    line-height: 34px;
    letter-spacing: 0.4px;
    color: #000000;
    opacity: 0.4;
    margin-top: 35px;
    text-align: center; }
  .footer .navi {
    display: inline-block;
    vertical-align: top;
    width: 170px; }
    .footer .navi:not(:last-child) {
      margin-right: 30px; }
    .footer .navi-box {
      max-width: 400px;
      margin: 0 auto; }
    .footer .navi li {
      display: block;
      margin-bottom: 12px; }
      .footer .navi li.active a {
        color: #74747D;
        font-weight: 600; }
    .footer .navi a {
      font-size: 18px;
      line-height: 25px;
      color: #8B8C9F;
      text-decoration: none; }
      .footer .navi a:hover {
        color: #74747D; }
  .footer .social {
    margin-left: -15px;
    margin-top: 18px; }
    .footer .social a {
      margin: 0 3px; }

.toggle-navi {
  display: none; }

.modal {
  background: #fff;
  box-shadow: -10px 8px 30px rgba(206, 206, 206, 0.25);
  position: relative; }
  .modal-wrap {
    position: fixed;
    top: 0;
    left: 0;
    bottom: 0;
    right: 0;
    display: flex;
    align-items: center;
    flex-direction: column;
    justify-content: center;
    background: rgba(239, 239, 239, 0.5); }
  .modal.shipping {
    max-width: 750px;
    margin: 0px auto; }
  .modal-head {
    padding: 85px 90px 30px;
    border-bottom: 1px solid #CDD1D3; }
  .modal-close {
    position: absolute;
    right: 26px;
    top: 26px;
    width: 22px;
    height: 22px; }
    .modal-close:before, .modal-close:after {
      content: '';
      width: 2px;
      height: 25px;
      display: block;
      position: absolute;
      left: 9px;
      top: 0;
      transform: rotate(45deg);
      background: #BFBFBF; }
    .modal-close:after {
      transform: rotate(-45deg); }
  .modal-title {
    font-size: 40px;
    line-height: 52px;
    color: #383838; }
  .modal-body {
    padding: 45px 90px; }
  .modal-footer {
    padding: 45px 90px 90px; }
  .modal .shipping-content .item:not(:last-child) {
    margin-bottom: 45px; }
  .modal .shipping-content p {
    font-weight: 500;
    font-size: 18px;
    line-height: 31px;
    color: #494948;
    margin-bottom: 15px; }
    .modal .shipping-content p i {
      font-size: 16px;
      line-height: 25px;
      font-style: italic; }

.thanks-title {
  position: relative;
  text-align: center; }
  .thanks-title:before {
    content: '';
    width: 72px;
    height: 72px;
    display: inline-block;
    background: url(../img/icons/icon-ok.svg) 0 0 no-repeat;
    margin-bottom: 15px; }
  .thanks-title span {
    display: block; }
  .thanks-title span.big {
    font-weight: 500;
    font-size: 30px;
    line-height: 41px;
    color: #F4A477; }
  .thanks-title span.small {
    font-size: 20px;
    line-height: 27px;
    color: #A4A8AA; }

@media screen and (max-width: 1280px) {
  .header-inner {
    padding: 0 25px; }
  .header-navi .navi {
    margin: 0 220px 0 120px;
    text-align: center;
    display: flex;
    justify-content: space-around; }
    .header-navi .navi li:not(:last-child) {
      margin-right: 5px; }
    .header-navi .navi a {
      font-size: 16px; }
  .header-navi .phones {
    padding-left: 50px; }
    .header-navi .phones:before {
      width: 35px; }
  .c1140,
  .ms-container {
    max-width: 990px;
    padding: 0 25px; }
  .swiper-slider {
    position: relative;
    margin: 0 50px; } }

@media screen and (max-width: 992px) {
  .header .logo img {
    width: 80px;
    height: auto;
    display: block; }
  .header .navi-social {
    display: block; }
  .toggle-navi {
    display: block;
    background: transparent;
    border: none;
    outline: none;
    float: right;
    margin-top: 14px; }
    .toggle-navi span {
      height: 3px;
      display: block;
      background: #fff;
      width: 33px; }
      .toggle-navi span:nth-child(2) {
        margin: 6px 0;
        width: 26px; }
  .header-social {
    display: block; }
  .header-navi {
    display: none;
    align-items: center;
    position: fixed;
    top: 0;
    bottom: 0;
    right: 0;
    left: 0;
    z-index: 100;
    background: #fcfcfc; }
    .header-navi.active {
      display: flex; }
    .header-navi-align {
      display: flex;
      flex-direction: column;
      position: relative;
      margin: 0 10%;
      width: 100%; }
    .header-navi .navi {
      order: 1;
      display: block;
      text-align: left;
      margin: 0 0 80px; }
      .header-navi .navi-close {
        position: absolute;
        top: 40px;
        right: 40px;
        cursor: pointer;
        width: 30px;
        height: 30px; }
        .header-navi .navi-close:hover span {
          background: #F4A477; }
        .header-navi .navi-close span {
          background: #BFBFBF;
          width: 2px;
          height: 26px;
          display: block;
          position: absolute;
          left: 14px;
          top: 2px;
          transform: rotate(45deg); }
          .header-navi .navi-close span:last-child {
            transform: rotate(-45deg); }
      .header-navi .navi li {
        margin: 0 0 30px;
        display: block; }
        .header-navi .navi li.active a {
          color: #8B8C9F; }
      .header-navi .navi a {
        font-size: 40px;
        line-height: 54px;
        color: #8B8C9F; }
      .header-navi .navi-social {
        width: 40px;
        position: absolute;
        right: 0;
        top: 140px; }
        .header-navi .navi-social span {
          transform: rotate(90deg) translate(-60px, 36px);
          position: absolute;
          width: 110px;
          color: #A4A4A4;
          font-size: 22px; }
    .header-navi .phones {
      order: 2;
      display: block;
      float: none; }
    .header-navi .social {
      width: 40px; }
      .header-navi .social a {
        margin: 23px 0;
        display: inline-block; }
      .header-navi .social span {
        transform: rotate(90deg); }
  section.props, section.boxes {
    padding: 70px 0; }
  section.feedback {
    padding: 70px 0 100px; }
  .solutions {
    padding: 100px 0 30px; }
    .solutions .c1140 {
      max-width: 560px; }
    .solutions .content {
      padding-left: 0; }
    .solutions .title {
      margin-bottom: 40px; }
    .solutions .img {
      position: static;
      width: 100%;
      height: auto;
      margin-bottom: 20px; }
  .swiper-slider {
    margin: 0; }
  .swiper-wrapper {
    margin-bottom: 35px; }
  .swiper-pagination {
    display: block; }
  .swiper-navi {
    display: none; }
  .swiper-content p {
    font-size: 18px;
    line-height: 27px; }
  .feedback-container:before {
    display: none; }
  .feedback-form {
    width: 100%; }
  .props-container .control {
    padding-left: 90px; }
    .props-container .control:after {
      top: 10px; }
    .props-container .control.active:before {
      top: 24px; }
    .props-container .control span {
      font-size: 32px;
      line-height: 44px; } }

@media screen and (max-width: 768px) {
  .header-navi .navi {
    margin: 0 0 40px; }
    .header-navi .navi-social {
      top: 120px; }
      .header-navi .navi-social span {
        transform: rotate(90deg) translate(-60px, 30px);
        font-size: 18px;
        width: 90px; }
    .header-navi .navi a {
      font-size: 32px;
      line-height: 44px; }
  section.props, section.boxes {
    padding: 60px 0; }
  section.feedback {
    padding: 60px 0 60px; }
  .ms-content {
    text-align: center; }
    .ms-content:after {
      display: none; }
  .ms .title {
    font-size: 34px;
    line-height: 44px; }
  .ms .undertitle {
    font-size: 24px;
    line-height: 31px; }
  .solutions {
    padding: 60px 0; }
    .solutions .title {
      font-size: 24px;
      line-height: 31px;
      margin-bottom: 10px; }
  .props-container .controls {
    float: none;
    width: 100%; }
  .props-container .content {
    margin-left: 0; }
    .props-container .content img {
      display: none; }
  .swiper-content p {
    font-size: 16px;
    line-height: 25px; }
  .footer-logo-container {
    float: none;
    text-align: center;
    margin-bottom: 20px; }
  .footer .phones a {
    font-size: 16px; }
  .footer .navi a {
    font-size: 16px; }
  .footer .navi-box {
    max-width: 400px;
    margin: 0; } }

@media screen and (max-width: 600px) {
  .header .logo img {
    width: 60px; }
  .header-navi .navi-social {
    width: 100%;
    order: 3;
    position: static;
    margin-top: 30px; }
    .header-navi .navi-social span {
      position: static;
      transform: rotate(0) translate(0, 0);
      width: auto;
      display: inline-block;
      vertical-align: middle;
      font-size: 16px; }
    .header-navi .navi-social .social {
      width: auto;
      display: inline-block;
      vertical-align: middle; }
      .header-navi .navi-social .social a {
        margin: 0 8px;
        display: inline-block; }
  .header-navi .navi a {
    font-size: 24px;
    line-height: 33px;
    color: #8B8C9F; }
  .header-navi .phones {
    padding-left: 60px; }
    .header-navi .phones:before {
      width: 45px; }
  .toggle-navi {
    margin-top: 14px; }
    .toggle-navi span {
      height: 2px;
      display: block;
      background: #fff;
      width: 26px; }
      .toggle-navi span:nth-child(2) {
        margin: 5px 0;
        width: 20px; }
  .swiper-content p {
    font-size: 16px;
    line-height: 25px;
    color: #494948; }
  .c1140 {
    padding: 0 15px; }
  .feedback-form {
    padding: 50px 15px; }
  .feedback .title {
    font-size: 24px;
    margin-bottom: 40px; }
  .footer .navi {
    width: auto; }
    .footer .navi:not(:last-child) {
      margin-right: 10px; } }

/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
